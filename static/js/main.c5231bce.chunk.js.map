{"version":3,"sources":["logo.svg","images/Resume.pdf","components/introduction.jsx","components/about.jsx","components/projects.jsx","components/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Introduction","bottom","href","Resume","class","download","Component","About","Projects","window","open","src","logo","alt","onClick","this","viewMoreProjects","Navbar","App","id","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,kC,sCCA3CD,EAAOC,QAAU,IAA0B,oC,4QCKtBC,E,uKAGjB,OACE,6BACA,kBAAC,IAAD,CAAMC,QAAM,GACV,mCAAQ,6BAAR,cACA,8CAAmB,6BAAnB,cAEA,uBAAGC,KAAMC,IAAQC,MAAM,UAAUC,SAAS,uBAA1C,yB,GATkCC,aCHrBC,E,uKAEjB,OACE,6BACE,4C,GAJ2BD,a,wBCIdE,E,iLAIjBC,OAAOC,KADK,6BACK,Y,+BAIjB,OACE,6BACE,6BACE,4CAGF,kBAAC,IAAD,CAAMT,QAAM,GACZ,yBAAKG,MAAM,OAET,yBAAKA,MAAM,UACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,OAAOO,IAAKC,IAAMC,IAAI,SACjC,yBAAKT,MAAM,aACT,4BAAI,yCACJ,iDAEA,yBAAKA,MAAM,gBACT,+DAOR,yBAAKA,MAAM,UACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,OAAOO,IAAKC,IAAMC,IAAI,SACjC,yBAAKT,MAAM,aACT,4BAAI,yCACJ,iDAEA,yBAAKA,MAAM,gBACT,+DAOR,yBAAKA,MAAM,UACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,OAAOO,IAAKC,IAAMC,IAAI,SACjC,yBAAKT,MAAM,aACT,4BAAI,yCACJ,iDAEA,yBAAKA,MAAM,gBACT,+DAOR,yBAAKA,MAAM,UACT,yBAAKA,MAAM,QACT,yBAAKA,MAAM,OAAOO,IAAKC,IAAMC,IAAI,SACjC,yBAAKT,MAAM,aACT,4BAAI,yCACJ,iDAEA,yBAAKA,MAAM,gBACT,iEAUV,kBAAC,IAAD,CAAMH,QAAM,GACZ,6BACE,4BAAQG,MAAM,UAAUU,QAASC,KAAKC,kBAAtC,6B,GAlF4BV,aCHjBW,G,6KAEf,OACE,yBAAKb,MAAQ,UACX,uBAAGF,KAAK,SAAR,QACA,uBAAGA,KAAK,UAAR,SACA,uBAAGA,KAAK,aAAR,YACA,uBAAGA,KAAK,YAAR,gB,GAP0BI,cCiBrBY,E,uKAXX,OACE,6BACE,kBAAC,EAAD,MACH,6BAASC,GAAG,QAAZ,IAAoB,kBAAC,EAAD,OACjB,6BAASA,GAAG,SAAZ,IAAqB,kBAAC,EAAD,OACrB,6BAASA,GAAG,YAAZ,IAAwB,kBAAC,EAAD,Y,GAPdb,aCKEc,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c5231bce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Resume.051375eb.pdf\";","import React, { Component } from 'react'\nimport '../css/buttons.css'\nimport Resume from '../images/Resume.pdf';\nimport Fade from 'react-reveal/Fade';\n\nexport default class Introduction extends Component {\n\n  render() {\n    return (\n      <div>\n      <Fade bottom>\n        <h1>Hi! <br />I'm Ashlee</h1>\n        <h1>I love building<br /> THINGS !!</h1>\n\n        <a href={Resume} class=\"buttons\" download=\"Ashlee_Kupor_Resume\">Download Resume</a>\n      </Fade>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div>\n        <p>About me</p>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport '../css/project.css'\nimport '../css/buttons.css'\nimport logo from '../logo.svg'\nimport Fade from 'react-reveal/Fade';\n\nexport default class Projects extends Component {\n  //open github\n  viewMoreProjects() {\n    const url = 'https://github.com/aekupor';\n    window.open(url, '_blank');\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h2>My projects</h2>\n        </div>\n\n        <Fade bottom>\n        <div class=\"row\">\n\n          <div class=\"column\">\n            <div class=\"card\">\n              <img class=\"logo\" src={logo} alt=\"Logo\" />\n              <div class=\"container\">\n                <h4><b>Project 1</b></h4>\n                <p>More about project</p>\n\n                <div class=\"more_details\">\n                  <p>This image looks super neat.</p>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div class=\"column\">\n            <div class=\"card\">\n              <img class=\"logo\" src={logo} alt=\"Logo\" />\n              <div class=\"container\">\n                <h4><b>Project 2</b></h4>\n                <p>More about project</p>\n\n                <div class=\"more_details\">\n                  <p>This image looks super neat.</p>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div class=\"column\">\n            <div class=\"card\">\n              <img class=\"logo\" src={logo} alt=\"Logo\" />\n              <div class=\"container\">\n                <h4><b>Project 3</b></h4>\n                <p>More about project</p>\n\n                <div class=\"more_details\">\n                  <p>This image looks super neat.</p>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          <div class=\"column\">\n            <div class=\"card\">\n              <img class=\"logo\" src={logo} alt=\"Logo\" />\n              <div class=\"container\">\n                <h4><b>Project 4</b></h4>\n                <p>More about project</p>\n\n                <div class=\"more_details\">\n                  <p>This image looks super neat.</p>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n        </Fade>\n\n        <Fade bottom>\n        <div>\n          <button class=\"buttons\" onClick={this.viewMoreProjects}>\n            View more projects\n          </button>\n        </div>\n        </Fade>\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport '../css/navbar.css'\n\nexport default class Navbar extends Component {\n  render() {\n      return (\n        <div class = \"navbar\">\n          <a href=\"#home\">Home</a>\n          <a href=\"#about\">About</a>\n          <a href=\"#projects\">Projects</a>\n          <a href=\"#contact\">Contact</a>\n        </div>\n      );\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Introduction from './components/introduction'\nimport About from './components/about'\nimport Projects from './components/projects'\nimport Navbar from './components/navbar'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n  \t\t\t<section id=\"home\"> <Introduction /></section>\n        <section id=\"about\"> <About /></section>\n        <section id=\"projects\"> <Projects /></section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}